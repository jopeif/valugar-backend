generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model addresses {
  id           String    @id @db.Uuid
  zip_code     String    @db.VarChar(9)
  state        String    @db.VarChar(2)
  city         String    @db.VarChar(100)
  neighborhood String    @db.VarChar(100)
  street       String    @db.VarChar(255)
  reference    String?
  listings     listings?
}

model listings {
  id               String            @id @db.Uuid
  title            String            @db.VarChar(255)
  description      String?
  type             listing_type
  category         property_category
  base_price       Decimal           @db.Decimal(14, 2)
  iptu             Decimal?          @db.Decimal(10, 2)
  user_id          String            @db.Uuid
  address_id       String?           @unique @db.Uuid
  details_id       String?           @unique @db.Uuid
  created_at       DateTime?         @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?         @default(now()) @db.Timestamptz(6)
  addresses        addresses?        @relation(fields: [address_id], references: [id], onUpdate: NoAction, map: "fk_listing_address")
  property_details property_details? @relation(fields: [details_id], references: [id], onUpdate: NoAction, map: "fk_listing_details")
  users            users             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_listing_user")
}

model property_details {
  id        String    @id @db.Uuid
  area      Decimal?  @db.Decimal(10, 2)
  bedrooms  Int?
  bathrooms Int?
  listings  listings?
}

model refresh_tokens {
  id         String    @id @db.Uuid
  user_id    String    @db.Uuid
  token      String    @unique
  expires_at DateTime  @db.Timestamptz(6)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_refresh_user")

  @@index([user_id], map: "idx_refresh_tokens_user_id")
}

model users {
  id        String @id @db.Uuid
  name      String @db.VarChar(255)
  email     String @unique @db.VarChar(255)
  password  String @db.VarChar(255)
  phone     String? @db.VarChar(20)
  role      String? @db.VarChar(50)
  isblocked Boolean? @default(false)
  createdat DateTime? @default(now())
  lastlogin DateTime?
  listings       listings[]
  refresh_tokens refresh_tokens[]
}

enum listing_type {
  SALE
  RENT
}

enum property_category {
  HOUSE
  APARTMENT
  LAND
  COMMERCIAL
}
